version: '3'

services:
  discovery-server:
    container_name: discovery-server
    build: ./discovery-server
    ports:
      - '8761:8761'

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    ports:
      - '8080:8080'
    depends_on:
      - discovery-server

  security-service:
    container_name: security-service
    build: ./security-service
    ports:
      - '8765:8765'
    depends_on:
      - discovery-server
      - usersDB
      - api-gateway

  usersDB:
    image: postgres:alpine
    hostname: usersDB
    container_name: usersDB
    ports:
      - '5438:5432'
    environment:
      POSTGRES_DB: usersDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./usersDB:/data

  publication-service:
    build: ./publication-service
    depends_on:
      - discovery-server
      - api-gateway
      - publicationsDB
      - redis-cache
      - rabbitMQ

  publicationsDB:
    image: mongo
    hostname: publicationsDB
    container_name: publicationsDB
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: publicationsDB
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - ./publicationsDB:/data/db

  redis-cache:
    image: redis
    hostname: redis-cache
    container_name: redis-cache
    ports:
      - '6379:6379'
    environment:
      REDIS_USER: admin
      REDIS_PASSWORD: admin
    volumes:
      - ./redis-cache:/data

  rabbitMQ:
    image: rabbitmq
    hostname: rabbitMQ
    container_name: rabbitMQ
    ports:
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitMQ:/data

  notification-service:
    build: ./notification-service
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      - discovery-server
      - api-gateway
      - publication-service
      - rabbitMQ

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - publication-service
      - notification-service

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana